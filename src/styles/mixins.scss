@use "sass:map";
@use "sass:meta";
@use "sass:list";
@use "./variable/index.scss" as *;
// 屏幕尺寸 参照 element-plus的layout
$scr: (
  mi: 610px,
  xs: 768px,
  sm: 992px,
  md: 1300px,
  lg: 1920px,
);

/// 快速创建响应式媒体查询的 mixin。
/// @param {String|Number} $size - 预定义屏幕尺寸的键（如 `mi`、`xs`、`sm`、`md`、`lg`）或动态单位（当 `$height` 为 `true` 时）。
/// @param {Boolean} $height - 是否基于 `max-height` 进行查询，默认为 `false`（即 `max-width`）。
/// 如果传入的 `$size` 不在 `$scr` 中且 `$height` 为 `false`，将发出警告。
@mixin media($size, $height: false) {
  @if $height and meta.type-of($size) == number {
    @media screen and (max-height: $size) {
      @content;
    }
  } @else if map.has-key($scr, $size) {
    $dimension: if($height, max-height, max-width);
    @media screen and (#{$dimension}: map.get($scr, $size)) {
      @content;
    }
  } @else {
    @warn "Size #{$size} not found in predefined screen sizes.";
  }
}

/// 快速创建 Flex 布局的 mixin。
/// @param {String} $justify - 主轴上的对齐方式，默认为 `center`。
/// @param {String} $align - 交叉轴上的对齐方式，默认为 `center`。

@mixin flex($justify: center, $align: center) {
  display: flex;
  justify-content: $justify;
  align-items: $align;
}

// 快速 设置 card的shadow 分为 fixed 和 普通的
@mixin setCardShadow($var: primary, $isFixed: true, $class: card_style) {
  .#{$class} {
    @each $key, $value in $them {
      html[themes="#{$key}"] body[banner-fixed="fixed"] & {
        @if $isFixed {
          box-shadow: var(--#{$var}-card-shadow-fixed);
        } @else {
          box-shadow: var(--#{$var}-card-shadow);
        }
      }
      html[themes="#{$key}"] & {
        box-shadow: var(--#{$var}-card-shadow);
      }
    }
  }
}

// 设置卡片的样式
@mixin setCardStyle(
  $var: primary,
  $isFixed: true,
  $isBg: true,
  $class: card_style
) {
  @include setCardShadow(#{$var}, $isFixed);
  @if $isBg {
    .#{$class} {
      background-color: var(--#{$var}-card-bg);
    }
  }
}

// 简化 相同时间的 transition
@mixin transition($duration, $properties...) {
  $transitions: (); // 创建一个空列表

  @each $property in $properties {
    $transitions: list.append($transitions, $property $duration, comma);
  }

  transition: $transitions;
}

// 当前主题
$currentTheme: 0;

// 快速 设置对应的 主题
@mixin useTheme {
  @each $key, $value in $them {
    $currentTheme: $key !global;
    html[themes="#{$key}"] & {
      @content;
    }
  }
}

// Function: 获取变量
@function getvar($key) {
  $themeMap: map.get($them, $currentTheme);
  @return map.get($themeMap, $key);
}

// 设置 el-form-item 的 label 颜色
@mixin set-el-label($color) {
  ::v-deep(.el-form-item) {
    .el-form-item__label {
      color: $color;
    }
  }
}
