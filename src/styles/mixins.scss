@use "sass:map";
@use "./variable/index.scss" as *;
// 屏幕尺寸 参照 element-plus的layout
$scr: (
  mi: 610px,
  xs: 768px,
  sm: 992px,
  md: 1300px,
  lg: 1920px,
);

// 快速创建响应式媒体查询的 mixin。 基于 max-width
/// @param {String} $size - 预定义屏幕尺寸的键，例如：`mi`、`xs`、`sm`、`md`、`lg`。
// 如果传入的 `$size` 不在 `$scr` 中，将发出警告。
@mixin media($size) {
  @if map.has-key($scr, $size) {
    @media screen and (max-width: map.get($scr, $size)) {
      @content;
    }
  } @else {
    @warn "Size #{$size} not found in predefined screen sizes.";
  }
}

/// 快速创建 Flex 布局的 mixin。
/// @param {String} $justify - 主轴上的对齐方式，默认为 `center`。
/// @param {String} $align - 交叉轴上的对齐方式，默认为 `center`。

@mixin flex($justify: center, $align: center) {
  display: flex;
  justify-content: $justify;
  align-items: $align;
}

// 快速 设置 card的shadow 分为 fixed 和 普通的
@mixin setCardShadow($var: --pages) {
  @each $key, $value in $them {
    html[themes="#{$key}"] body[banner-fixed="fixed"] & {
      box-shadow: var(#{$var}-shadow-fixed);
    }
    html[themes="#{$key}"] & {
      box-shadow: var(#{$var}-shadow);
    }
  }
}

// 当前主题
$currentTheme: 0;

// 快速 设置对应的 主题
@mixin useTheme {
  @each $key, $value in $them {
    $currentTheme: $key !global;
    html[themes="#{$key}"] & {
      @content;
    }
  }
}

// Function: 获取变量
@function getvar($key) {
  $themeMap: map.get($them, $currentTheme);
  @return map.get($themeMap, $key);
}

// 设置 el-form-item 的 label 颜色
@mixin set-el-label($color) {
  ::v-deep(.el-form-item) {
    .el-form-item__label {
      color: $color;
    }
  }
}
